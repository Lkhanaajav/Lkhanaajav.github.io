{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lhana\\\\OneDrive\\\\Desktop\\\\2022-2023 classes\\\\Software engineering\\\\projectSoftware\\\\src\\\\loginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, NavLink } from \"react-router-dom\";\nimport { useNavigate } from 'react-router-dom';\nimport ReactDOM from \"react-dom\";\nimport \"./Login.css\";\nimport Main from './Main';\nimport logo from './logo.jpg';\nimport { SignUp } from './containers/signUp/SignUp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginPage() {\n  _s();\n\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const ROUTES = {\n    APPOINTMENTS: \"/appointments\",\n    HOME: \"/home\",\n    SIGN: \"/sign\"\n  };\n  const navigate = useNavigate();\n\n  const navigateSign = () => {\n    navigate('/sign');\n  }; // User Login info\n\n\n  const database = [{\n    username: \"user1\",\n    password: \"pass1\"\n  }, {\n    username: \"user2\",\n    password: \"pass2\"\n  }];\n  const errors = {\n    uname: \"invalid username\",\n    pass: \"invalid password\"\n  };\n\n  const eventHand = event => {\n    ReactDOM.render( /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this), document.getElementById('root'));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    var {\n      uname,\n      pass\n    } = document.forms[0];\n    const userData = database.find(user => user.username === uname.value);\n\n    if (userData) {\n      if (userData.password !== pass.value) {\n        // Invalid password\n        setErrorMessages({\n          name: \"pass\",\n          message: errors.pass\n        });\n      } else {\n        setIsSubmitted(true);\n        ReactDOM.render( /*#__PURE__*/_jsxDEV(Router, {\n          children: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), document.getElementById('root'));\n      }\n    } else {\n      setErrorMessages({\n        name: \"uname\",\n        message: errors.uname\n      });\n    }\n  };\n\n  const renderErrorMessage = name => name === errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: errorMessages.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 7\n  }, this);\n\n  const renderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            width: \"200px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"uname\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), renderErrorMessage(\"uname\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"pass\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), renderErrorMessage(\"pass\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: eventHand,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: navigateSign,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), isSubmitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"User is successfully logged in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 24\n      }, this) : renderForm]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginPage, \"0gtQMfuUmOp3YxHCKD24DtYT84I=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["C:/Users/lhana/OneDrive/Desktop/2022-2023 classes/Software engineering/projectSoftware/src/loginPage.js"],"names":["React","useState","BrowserRouter","Router","Routes","Route","NavLink","useNavigate","ReactDOM","Main","logo","SignUp","LoginPage","errorMessages","setErrorMessages","isSubmitted","setIsSubmitted","ROUTES","APPOINTMENTS","HOME","SIGN","navigate","navigateSign","database","username","password","errors","uname","pass","eventHand","event","render","document","getElementById","handleSubmit","preventDefault","forms","userData","find","user","value","name","message","renderErrorMessage","renderForm"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {BrowserRouter as Router,Routes,Route, NavLink} from \"react-router-dom\";\r\nimport {useNavigate} from 'react-router-dom';\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Login.css\";\r\nimport Main from './Main';\r\nimport logo from './logo.jpg';\r\nimport {SignUp} from './containers/signUp/SignUp';\r\n\r\nfunction LoginPage() {\r\n  const [errorMessages, setErrorMessages] = useState({});\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  const ROUTES = {\r\n    APPOINTMENTS: \"/appointments\",\r\n    HOME: \"/home\",\r\n    SIGN: \"/sign\"\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  const navigateSign = () => {\r\n       navigate('/sign');\r\n   } \r\n\r\n  // User Login info\r\n  const database = [\r\n    {\r\n      username: \"user1\",\r\n      password: \"pass1\"\r\n    },\r\n    {\r\n      username: \"user2\",\r\n      password: \"pass2\"\r\n    }\r\n  ];\r\n\r\n  const errors = {\r\n    uname: \"invalid username\",\r\n    pass: \"invalid password\"\r\n  };\r\n  const eventHand=(event)=>{\r\n    ReactDOM.render(\r\n          <Router>\r\n            <SignUp />\r\n          </Router>,\r\n          document.getElementById('root')\r\n        );\r\n  }\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    var { uname, pass } = document.forms[0];\r\n    const userData = database.find((user) => user.username === uname.value);\r\n    if (userData) {\r\n      if (userData.password !== pass.value) {\r\n        // Invalid password\r\n        setErrorMessages({ name: \"pass\", message: errors.pass });\r\n      } else {\r\n        setIsSubmitted(true);\r\n        ReactDOM.render(\r\n          <Router>\r\n            <Main />\r\n          </Router>,\r\n          document.getElementById('root')\r\n        );\r\n      }\r\n    } else {\r\n      setErrorMessages({ name: \"uname\", message: errors.uname });\r\n    }\r\n  };\r\n\r\n  const renderErrorMessage = (name) =>\r\n    name === errorMessages.name && (\r\n      <div className=\"error\">{errorMessages.message}</div>\r\n    );\r\n\r\n  const renderForm = (\r\n    <div className=\"form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-container\">\r\n          <div>\r\n            <img src={logo} width=\"200px\"/>\r\n          </div>\r\n          <label>Username </label>\r\n          <input type=\"text\" name=\"uname\" required />\r\n          {renderErrorMessage(\"uname\")}\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <label>Password </label>\r\n          <input type=\"password\" name=\"pass\" required />\r\n          {renderErrorMessage(\"pass\")}\r\n        </div>\r\n        <div className=\"button-container\">\r\n          <input type=\"submit\" />\r\n        </div>\r\n      </form>\r\n      <form onSubmit={eventHand}>\r\n        <button onClick={navigateSign}>Sign Up\r\n        </button>\r\n       \r\n      </form>\r\n      <main>\r\n      </main>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"login-form\">\r\n        <div className=\"title\">Sign In</div>\r\n        {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"]},"metadata":{},"sourceType":"module"}