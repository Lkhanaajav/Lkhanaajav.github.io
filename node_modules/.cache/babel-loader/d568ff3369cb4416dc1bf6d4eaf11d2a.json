{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lhana\\\\OneDrive\\\\Desktop\\\\2022-2023 classes\\\\Software engineering\\\\projectSoftware\\\\src\\\\containers\\\\signUp\\\\ContactsPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useNavigate } from \"react\";\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\nimport { TileList } from \"../../components/tileList/TileList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ContactsPage = ({\n  contacts,\n  addContact\n}) => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [duplicate, setDuplicate] = useState(false);\n  const navigate = useNavigate();\n\n  const navigateToContacts = () => {\n    // 👇️ navigate to /contacts\n    navigate('/contacts');\n  };\n\n  const navigateHome = () => {\n    // 👇️ navigate to /\n    navigate('/');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!duplicate) {\n      addContact(name, phone, email);\n      setName(\"\");\n      setPhone(\"\");\n      setEmail(\"\");\n    }\n  };\n\n  useEffect(() => {\n    const nameIsDuplicate = () => {\n      const found = contacts.find(contact => contact.name === name);\n\n      if (found !== undefined) {\n        return true;\n      }\n\n      return false;\n    };\n\n    if (nameIsDuplicate()) {\n      setDuplicate(true);\n    } else {\n      setDuplicate(false);\n    }\n  }, [name, contacts, duplicate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Add Contact\", duplicate ? \" - Name Already Exists\" : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        name: name,\n        setName: setName,\n        phone: phone,\n        setPhone: setPhone,\n        email: email,\n        setEmail: setEmail,\n        handleSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TileList, {\n        tiles: contacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ContactsPage, \"VJrac26fleA5/uw6wKC7NdzGwO8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ContactsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsPage\");","map":{"version":3,"sources":["C:/Users/lhana/OneDrive/Desktop/2022-2023 classes/Software engineering/projectSoftware/src/containers/signUp/ContactsPage.js"],"names":["React","useState","useEffect","useNavigate","ContactForm","TileList","ContactsPage","contacts","addContact","name","setName","phone","setPhone","email","setEmail","duplicate","setDuplicate","navigate","navigateToContacts","navigateHome","handleSubmit","e","preventDefault","nameIsDuplicate","found","find","contact","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAoCC,WAApC,QAAuD,OAAvD;AAEA,SAASC,WAAT,QAA4B,0CAA5B;AACA,SAASC,QAAT,QAAyB,oCAAzB;;;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA8B;AAAA;;AACxD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMgB,QAAQ,GAAGd,WAAW,EAA5B;;AAEA,QAAMe,kBAAkB,GAAG,MAAM;AAC/B;AACAD,IAAAA,QAAQ,CAAC,WAAD,CAAR;AACD,GAHD;;AAKA,QAAME,YAAY,GAAG,MAAM;AACzB;AACAF,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,GAHD;;AAMA,QAAMG,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,CAACP,SAAL,EAAgB;AACdP,MAAAA,UAAU,CAACC,IAAD,EAAOE,KAAP,EAAcE,KAAd,CAAV;AACAH,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;AACF,GARD;;AAUAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,eAAe,GAAG,MAAM;AAC5B,YAAMC,KAAK,GAAGjB,QAAQ,CAACkB,IAAT,CAAeC,OAAD,IAAaA,OAAO,CAACjB,IAAR,KAAiBA,IAA5C,CAAd;;AACA,UAAIe,KAAK,KAAKG,SAAd,EAAyB;AACvB,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;AACD,KAND;;AAQA,QAAIJ,eAAe,EAAnB,EAAuB;AACrBP,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAFD,MAEO;AACLA,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,GAdQ,EAcN,CAACP,IAAD,EAAOF,QAAP,EAAiBQ,SAAjB,CAdM,CAAT;AAgBA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAA,kCAEGA,SAAS,GAAG,wBAAH,GAA8B,EAF1C;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,WAAD;AACE,QAAA,IAAI,EAAEN,IADR;AAEE,QAAA,OAAO,EAAEC,OAFX;AAGE,QAAA,KAAK,EAAEC,KAHT;AAIE,QAAA,QAAQ,EAAEC,QAJZ;AAKE,QAAA,KAAK,EAAEC,KALT;AAME,QAAA,QAAQ,EAAEC,QANZ;AAOE,QAAA,YAAY,EAAEM;AAPhB;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE;AAAA;AAAA;AAAA;AAAA,YAhBF,eAiBE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEb;AAAjB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA,kBADF;AAwBD,CApEM;;GAAMD,Y;UAKMH,W;;;KALNG,Y","sourcesContent":["import React, { useState, useEffect,useNavigate } from \"react\";\r\n\r\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const ContactsPage = ({ contacts, addContact }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [duplicate, setDuplicate] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const navigateToContacts = () => {\r\n    // 👇️ navigate to /contacts\r\n    navigate('/contacts');\r\n  };\r\n\r\n  const navigateHome = () => {\r\n    // 👇️ navigate to /\r\n    navigate('/');\r\n  };\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!duplicate) {\r\n      addContact(name, phone, email);\r\n      setName(\"\");\r\n      setPhone(\"\");\r\n      setEmail(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const nameIsDuplicate = () => {\r\n      const found = contacts.find((contact) => contact.name === name);\r\n      if (found !== undefined) {\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    if (nameIsDuplicate()) {\r\n      setDuplicate(true);\r\n    } else {\r\n      setDuplicate(false);\r\n    }\r\n  }, [name, contacts, duplicate]);\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <h2>\r\n          Add Contact\r\n          {duplicate ? \" - Name Already Exists\" : \"\"}\r\n        </h2>\r\n        <ContactForm\r\n          name={name}\r\n          setName={setName}\r\n          phone={phone}\r\n          setPhone={setPhone}\r\n          email={email}\r\n          setEmail={setEmail}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList tiles={contacts} />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}